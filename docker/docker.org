* 概述
Linux容器不是模拟一个完整的操作系统，而是对进程进行隔离。对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。
由于容器是进程级别的，相比虚拟机有很多优势。
Docker属于Linux容器的一种封装，提供简单易用的使用接口。是目前最流行的Linux容器解决方案。
容器还可以进行版本管理、复制、分享、修改，就行管理普通的代码一样。
* 用途 
1.提供一次性的环境。比如，本地测试他人的软件、持续集成时提供单元测试和构建的环境。
2.提供弹性的云服务。Docker容器可以随开随关，很适合动态扩容和缩容。
3.组建微服务架构。通过多个容器，一台机器可以跑多个服务，本机就可以模拟出微服务架构。
* 镜像文件
Docker把应用程序及其依赖，打包在image文件里面。只有通过这个文件，才能生成Docker容器。image文件可以看作是容器的模板，Docker根据image文件生成容器的实例。同一个image文件可以生成多个同时运行的容器实例。
* 容器文件
image文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件，image文件和容器文件。关闭容器并不会删除容器文件，只是容器停止运行而已。
* Dockerfile文件
制作image文件需要用到Dockerfile文件。Dockerfile是一个文本文件，用来配置image。Docker根据该文件生成image文件。
* 常用命令
docker version
docker info
docker image ls
docker image rm
docker image pull hello-world
docker container run hello-world
docker container run -it ubuntu bash
docker container kill [containID] 停止容器，并不删除容器文件
docker container rm [containID] 删除容器文件